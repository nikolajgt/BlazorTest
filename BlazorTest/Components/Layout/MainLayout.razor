@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="4" Color="Color.Primary">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="ToggleDrawer" />
        <MudText Typo="Typo.h6" Class="ml-3">BlazorTest</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudButton OnClick="Logout">Logout</MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton OnClick="Login">Login</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>

    <MudDrawer Clipped="true" Elevation="4" Color="Color.Default" Responsive="true" @bind-Open="_drawerOpen">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        <article class="content px-4">
            @Body
        </article>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;  // Controls drawer visibility

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Login()
    {
        NavigationManager.NavigateTo("/login");
    }

    private async Task Logout()
    {
        // var authStateProvider = (CustomAuthStateProvider)AuthenticationStateProvider;
        // authStateProvider.MarkUserAsLoggedOut();
        // NavigationManager.NavigateTo("/login");
    }
}